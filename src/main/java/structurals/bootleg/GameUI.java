/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package structurals.bootleg;

import java.util.Arrays;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Yuno
 */
public class GameUI extends javax.swing.JFrame {

    //VARIABLES
    int[] board = new int[16];
    boolean alt = true;
    boolean p1haveTreasure = true;
    boolean p2haveTreasure = true;
    
    //checking
    int p1Treas = 2;
    int p2Treas = 2;
    int countTreasure = 0;
    int placeTreasure = 0;
    
    /**
     * Creates new form GameUI
     */
    public GameUI() {
        initComponents();
    }

    //FUNCTIONS
    private void res() {
        for (int x = 0; x < board.length; x++) {
            board[x] = 0;
        }
        
        alt = true;
        P1turn.setVisible(true);
        P2turn.setVisible(false);
        p1haveTreasure = false;
        p2haveTreasure = false;
        countTreasure = 0;
        p1Treas = 2;
        p2Treas = 2;
        
        jb1.setEnabled(true);
        jb2.setEnabled(true);
        jb3.setEnabled(true);
        jb4.setEnabled(true);
        jb5.setEnabled(true);
        jb6.setEnabled(true);
        jb7.setEnabled(true);
        jb8.setEnabled(true);
        jb9.setEnabled(true);
        jb10.setEnabled(true);
        jb11.setEnabled(true);
        jb12.setEnabled(true);
        jb13.setEnabled(true);
        jb14.setEnabled(true);
        jb15.setEnabled(true);
        jb16.setEnabled(true);
        
        jb1.setIcon(new ImageIcon("./img/sand.png"));
        jb2.setIcon(new ImageIcon("./img/sand.png"));
        jb3.setIcon(new ImageIcon("./img/sand.png"));
        jb4.setIcon(new ImageIcon("./img/sand.png"));
        jb5.setIcon(new ImageIcon("./img/sand.png"));
        jb6.setIcon(new ImageIcon("./img/sand.png"));
        jb7.setIcon(new ImageIcon("./img/sand.png"));
        jb8.setIcon(new ImageIcon("./img/sand.png"));
        jb9.setIcon(new ImageIcon("./img/sand.png"));
        jb10.setIcon(new ImageIcon("./img/sand.png"));
        jb11.setIcon(new ImageIcon("./img/sand.png"));
        jb12.setIcon(new ImageIcon("./img/sand.png"));
        jb13.setIcon(new ImageIcon("./img/sand.png"));
        jb14.setIcon(new ImageIcon("./img/sand.png"));
        jb15.setIcon(new ImageIcon("./img/sand.png"));
        jb16.setIcon(new ImageIcon("./img/sand.png"));
        
        P1turn.setIcon(new ImageIcon("./img/turn.png"));
        P2turn.setIcon(new ImageIcon("./img/turn.png"));
        P2turn.setVisible(false);
        jLabel3.setIcon(new ImageIcon("./img/title.png"));
        jLabelP1.setIcon(new ImageIcon("./img/0.png"));
        jLabelP2.setIcon(new ImageIcon("./img/0.png"));
    }
    
    private void turn() {
        if (alt == true) {
            P1turn.setVisible(true);
            P2turn.setVisible(false);
        } else {
            P2turn.setVisible(true);
            P1turn.setVisible(false);
        }
    }
    
    private void checkhp() {
        if(countTreasure == 4) {
            if (p1Treas == 1) {
                jLabelP1.setIcon(new ImageIcon("./img/1hp.png"));
            } else if (p1Treas == 0) {
                jLabelP1.setIcon(new ImageIcon("./img/0hp.png"));
                JOptionPane.showMessageDialog(this,"Player2 Won","Bootleg",
                        JOptionPane.INFORMATION_MESSAGE);
                res();
            }
            if (p2Treas == 1) {
                jLabelP2.setIcon(new ImageIcon("./img/1hp.png"));
            } else if (p2Treas == 0) {
                jLabelP2.setIcon(new ImageIcon("./img/0hp.png"));
                JOptionPane.showMessageDialog(this,"Player1 Won","Bootleg",
                        JOptionPane.INFORMATION_MESSAGE);
                res();
            }
        }
        if(placeTreasure !=5) {
            switch (placeTreasure) {
                case 1:
                    jLabelP1.setIcon(new ImageIcon("./img/1.png"));
                    break;
                case 2:
                    jLabelP2.setIcon(new ImageIcon("./img/1.png"));
                    break;
                case 3:
                    jLabelP1.setIcon(new ImageIcon("./img/2.png"));
                    break;
                case 4:
                    jLabelP2.setIcon(new ImageIcon("./img/2.png"));
                    placeTreasure++;
                    break;
            }
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jb1 = new javax.swing.JButton();
        jb2 = new javax.swing.JButton();
        jb3 = new javax.swing.JButton();
        jb4 = new javax.swing.JButton();
        jb5 = new javax.swing.JButton();
        jb6 = new javax.swing.JButton();
        jb7 = new javax.swing.JButton();
        jb8 = new javax.swing.JButton();
        jb9 = new javax.swing.JButton();
        jb10 = new javax.swing.JButton();
        jb11 = new javax.swing.JButton();
        jb12 = new javax.swing.JButton();
        jb13 = new javax.swing.JButton();
        jb14 = new javax.swing.JButton();
        jb15 = new javax.swing.JButton();
        jb16 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelP1 = new javax.swing.JLabel();
        jLabelP2 = new javax.swing.JLabel();
        P2turn = new javax.swing.JLabel();
        P1turn = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Res = new javax.swing.JButton();
        Quit = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(41, 28, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(41, 28, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jb1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb1ActionPerformed(evt);
            }
        });

        jb2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb2ActionPerformed(evt);
            }
        });

        jb3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb3ActionPerformed(evt);
            }
        });

        jb4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb4ActionPerformed(evt);
            }
        });

        jb5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb5ActionPerformed(evt);
            }
        });

        jb6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb6ActionPerformed(evt);
            }
        });

        jb7.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb7ActionPerformed(evt);
            }
        });

        jb8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb8ActionPerformed(evt);
            }
        });

        jb9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb9ActionPerformed(evt);
            }
        });

        jb10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb10ActionPerformed(evt);
            }
        });

        jb11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb11ActionPerformed(evt);
            }
        });

        jb12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb12ActionPerformed(evt);
            }
        });

        jb13.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb13ActionPerformed(evt);
            }
        });

        jb14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb14ActionPerformed(evt);
            }
        });

        jb15.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb15ActionPerformed(evt);
            }
        });

        jb16.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\sand.png")); // NOI18N
        jb16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jb1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jb5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jb9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jb13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 290, 300));

        jPanel3.setBackground(new java.awt.Color(41, 28, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("French Script MT", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Player 1");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("French Script MT", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Player 2");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabelP1.setBackground(new java.awt.Color(51, 51, 51));
        jLabelP1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabelP1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelP1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\0.png")); // NOI18N
        jLabelP1.setToolTipText("");
        jLabelP1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelP1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(jLabelP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 160, 40));

        jLabelP2.setBackground(new java.awt.Color(51, 51, 51));
        jLabelP2.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabelP2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelP2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\0.png")); // NOI18N
        jLabelP2.setToolTipText("");
        jLabelP2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelP2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(jLabelP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 160, 40));

        P2turn.setBackground(new java.awt.Color(51, 51, 51));
        P2turn.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        P2turn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        P2turn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\turn.png")); // NOI18N
        P2turn.setToolTipText("");
        P2turn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        P2turn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.red, java.awt.Color.lightGray, java.awt.Color.red));
        P2turn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(P2turn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 30, 30));

        P1turn.setBackground(new java.awt.Color(51, 51, 51));
        P1turn.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        P1turn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        P1turn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\turn.png")); // NOI18N
        P1turn.setToolTipText("");
        P1turn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        P1turn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.blue, java.awt.Color.lightGray, java.awt.Color.blue));
        P1turn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(P1turn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 30, 30));

        jPanel6.setBackground(new java.awt.Color(41, 28, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 70));

        jPanel7.setBackground(new java.awt.Color(41, 28, 0));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 160, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 180, 170));

        jPanel4.setBackground(new java.awt.Color(41, 28, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Res.setFont(new java.awt.Font("French Script MT", 0, 24)); // NOI18N
        Res.setText("Restart");
        Res.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));
        Res.setOpaque(false);
        Res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResActionPerformed(evt);
            }
        });
        jPanel4.add(Res, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 50));

        Quit.setFont(new java.awt.Font("French Script MT", 0, 24)); // NOI18N
        Quit.setText("Quit");
        Quit.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));
        Quit.setOpaque(false);
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });
        jPanel4.add(Quit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 160, 50));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 180, 120));

        jPanel5.setBackground(new java.awt.Color(41, 28, 0));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("French Script MT", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Samara\\Documents\\NetBeansProjects\\Bootleg\\img\\title.png")); // NOI18N
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 70));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 480, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private JFrame frame;
    private void jb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb1ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[0] == 2) {
                    board[0] = 3;
                    p2Treas--;
                    jb1.setIcon(new ImageIcon("./img/foundtreasure.png"));
                    alt = false;
                } else if (board[0] == 1) {
                    board[0] = 3;
                    p1Treas--;
                    jb1.setIcon(new ImageIcon("./img/foundtreasure.png"));
                    alt = false;
                } else if (board[0] == 0) {
                    board[0] = 3;
                    jb1.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[0] == 2) {
                    board[0] = 3;
                    p2Treas--;
                    jb1.setIcon(new ImageIcon("./img/foundtreasure.png"));
                    alt = true;
                } else if (board[0] == 1) {
                    board[0] = 3;
                    p1Treas--;
                    jb1.setIcon(new ImageIcon("./img/foundtreasure.png"));
                    alt = true;
                } else if (board[0] == 0) {
                    board[0] = 3;
                    jb1.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        } 
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[0] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[0] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb1ActionPerformed

    private void jb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb2ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[1] == 2) {
                    board[1] = 3;
                        p2Treas--;
                        jb2.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[1] == 1) {
                    board[1] = 3;
                        p1Treas--;
                        jb2.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[1] == 0) {
                    board[1] = 3;
                    jb2.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[1] == 2) {
                    board[1] = 3;
                        p2Treas--;
                        jb2.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[1] == 1) {
                    board[1] = 3;
                        p1Treas--;
                        jb2.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[1] == 0) {
                    board[1] = 3;
                    jb2.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        } 
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[1] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[1] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb2ActionPerformed

    private void jb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb3ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[2] == 2) {
                    board[2] = 3;
                        p2Treas--;
                        jb3.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[2] == 1) {
                    board[2] = 3;
                        p1Treas--;
                        jb3.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[2] == 0) {
                    board[2] = 3;
                    jb3.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[2] == 2) {
                    board[2] = 3;
                        p2Treas--;
                        jb3.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[2] == 1) {
                    board[2] = 3;
                        p1Treas--;
                        jb3.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[2] == 0) {
                    board[2] = 3;
                    jb3.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
         
        if (countTreasure != 4) {
            if (alt == true) {
                board[2] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[2] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb3ActionPerformed

    private void jb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb4ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[3] == 2) {
                    board[3] = 3;
                        p2Treas--;
                        jb4.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[3] == 1) {
                    board[3] = 3;
                        p1Treas--;
                        jb4.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[3] == 0) {
                    board[3] = 3;
                    jb4.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[3] == 2) {
                    board[3] = 3;
                        p2Treas--;
                        jb4.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[3] == 1) {
                    board[3] = 3;
                        p1Treas--;
                        jb4.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[3] == 0) {
                    board[3] = 3;
                    jb4.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[3] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[3] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb4ActionPerformed

    private void ResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResActionPerformed
        // TODO add your handling code here:
        res();
    }//GEN-LAST:event_ResActionPerformed

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame,"Quit Game?","Bootleg",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_QuitActionPerformed

    private void jb5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb5ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[4] == 2) {
                    board[4] = 3;
                        p2Treas--;
                        jb5.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[4] == 1) {
                    board[4] = 3;
                        p1Treas--;
                        jb5.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[4] == 0) {
                    board[4] = 3;
                    jb5.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[4] == 2) {
                    board[4] = 3;
                        p2Treas--;
                        jb5.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[4] == 1) {
                    board[4] = 3;
                        p1Treas--;
                        jb5.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[4] == 0) {
                    board[4] = 3;
                    jb5.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }  
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[4] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[4] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb5ActionPerformed

    private void jb6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb6ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[5] == 2) {
                    board[5] = 3;
                        p2Treas--;
                        jb6.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[5] == 1) {
                    board[5] = 3;
                        p1Treas--;
                        jb6.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[5] == 0) {
                    board[5] = 3;
                    jb6.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[5] == 2) {
                    board[5] = 3;
                        p2Treas--;
                        jb6.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[5] == 1) {
                    board[5] = 3;
                        p1Treas--;
                        jb6.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[5] == 0) {
                    board[5] = 3;
                    jb6.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }           
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[5] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[5] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb6ActionPerformed

    private void jb7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb7ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[6] == 2) {
                    board[6] = 3;
                        p2Treas--;
                        jb7.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[6] == 1) {
                    board[6] = 3;
                        p1Treas--;
                        jb7.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[6] == 0) {
                    board[6] = 3;
                    jb7.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[6] == 2) {
                    board[6] = 3;
                        p2Treas--;
                        jb7.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[6] == 1) {
                    board[6] = 3;
                        p1Treas--;
                        jb7.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[6] == 0) {
                    board[6] = 3;
                    jb7.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            } 
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[6] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[6] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb7ActionPerformed

    private void jb8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb8ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[7] == 2) {
                    board[7] = 3;
                        p2Treas--;
                        jb8.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[7] == 1) {
                    board[7] = 3;
                        p1Treas--;
                        jb8.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[7] == 0) {
                    board[7] = 3;
                    jb8.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[7] == 2) {
                    board[7] = 3;
                        p2Treas--;
                        jb8.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[7] == 1) {
                    board[7] = 3;
                        p1Treas--;
                        jb8.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[7] == 0) {
                    board[7] = 3;
                    jb8.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[7] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[7] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb8ActionPerformed

    private void jb9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb9ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[8] == 2) {
                    board[8] = 3;
                        p2Treas--;
                        jb9.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[8] == 1) {
                    board[8] = 3;
                        p1Treas--;
                        jb9.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[8] == 0) {
                    board[8] = 3;
                    jb9.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[8] == 2) {
                    board[8] = 3;
                        p2Treas--;
                        jb9.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[8] == 1) {
                    board[8] = 3;
                        p1Treas--;
                        jb9.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[8] == 0) {
                    board[8] = 3;
                    jb9.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[8] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[8] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb9ActionPerformed

    private void jb10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb10ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[9] == 2) {
                    board[9] = 3;
                        p2Treas--;
                        jb10.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[9] == 1) {
                    board[9] = 3;
                        p1Treas--;
                        jb10.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[9] == 0) {
                    board[9] = 3;
                    jb10.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[9] == 2) {
                    board[9] = 3;
                        p2Treas--;
                        jb10.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[9] == 1) {
                    board[9] = 3;
                        p1Treas--;
                        jb10.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[9] == 0) {
                    board[9] = 3;
                    jb10.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[9] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[9] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb10ActionPerformed

    private void jb11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb11ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[10] == 2) {
                    board[10] = 3;
                        p2Treas--;
                        jb11.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[10] == 1) {
                    board[10] = 3;
                        p1Treas--;
                        jb11.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[10] == 0) {
                    board[10] = 3;
                    jb11.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[10] == 2) {
                    board[10] = 3;
                        p2Treas--;
                        jb11.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[10] == 1) {
                    board[10] = 3;
                        p1Treas--;
                        jb11.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[10] == 0) {
                    board[10] = 3;
                    jb11.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[10] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[10] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb11ActionPerformed

    private void jb12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb12ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[11] == 2) {
                    board[11] = 3;
                        p2Treas--;
                        jb12.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[11] == 1) {
                    board[11] = 3;
                        p1Treas--;
                        jb12.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[11] == 0) {
                    board[11] = 3;
                    jb12.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[11] == 2) {
                    board[11] = 3;
                        p2Treas--;
                        jb12.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[11] == 1) {
                    board[11] = 3;
                        p1Treas--;
                        jb12.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[11] == 0) {
                    board[11] = 3;
                    jb12.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[11] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[11] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb12ActionPerformed

    private void jb13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb13ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[12] == 2) {
                    board[12] = 3;
                        p2Treas--;
                        jb13.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[12] == 1) {
                    board[12] = 3;
                        p1Treas--;
                        jb13.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[12] == 0) {
                    board[12] = 3;
                    jb13.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[12] == 2) {
                    board[12] = 3;
                        p2Treas--;
                        jb13.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[12] == 1) {
                    board[12] = 3;
                        p1Treas--;
                        jb13.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[12] == 0) {
                    board[12] = 3;
                    jb13.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[12] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[12] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb13ActionPerformed

    private void jb14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb14ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[13] == 2) {
                    board[13] = 3;
                        p2Treas--;
                        jb14.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[13] == 1) {
                    board[13] = 3;
                        p1Treas--;
                        jb14.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[13] == 0) {
                    board[13] = 3;
                    jb14.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[13] == 2) {
                    board[13] = 3;
                        p2Treas--;
                        jb14.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[13] == 1) {
                    board[13] = 3;
                        p1Treas--;
                        jb14.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[13] == 0) {
                    board[13] = 3;
                    jb14.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[13] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[13] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb14ActionPerformed

    private void jb15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb15ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[14] == 2) {
                    board[14] = 3;
                        p2Treas--;
                        jb15.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[14] == 1) {
                    board[14] = 3;
                        p1Treas--;
                        jb15.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[14] == 0) {
                    board[14] = 3;
                    jb15.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[14] == 2) {
                    board[14] = 3;
                        p2Treas--;
                        jb15.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[14] == 1) {
                    board[14] = 3;
                        p1Treas--;
                        jb15.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[14] == 0) {
                    board[14] = 3;
                    jb15.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[14] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[14] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb15ActionPerformed

    private void jb16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb16ActionPerformed
        // TODO add your handling code here:
        if (countTreasure == 4) {
            if (alt == true) {
                if (board[15] == 2) {
                    board[15] = 3;
                        p2Treas--;
                        jb16.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[15] == 1) {
                    board[15] = 3;
                        p1Treas--;
                        jb16.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = false;
                } else if (board[15] == 0) {
                    board[15] = 3;
                    jb16.setIcon(new ImageIcon("./img/dug.png"));
                    alt = false;
                }
            }
            if (alt == false) {
                if (board[15] == 2) {
                    board[15] = 3;
                        p2Treas--;
                        jb16.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[15] == 1) {
                    board[15] = 3;
                        p1Treas--;
                        jb16.setIcon(new ImageIcon("./img/foundtreasure.png"));
                        alt = true;
                } else if (board[15] == 0) {
                    board[15] = 3;
                    jb16.setIcon(new ImageIcon("./img/dug.png"));
                    alt = true;
                }
            }
        }
        
        if (countTreasure != 4) {
            if (alt == true) {
                board[15] = 1;
                countTreasure++;
                placeTreasure++;
                alt = false;
            } else {
                board[15] = 2;
                countTreasure++;
                placeTreasure++;
                alt = true;
            }
        }
        turn();
        checkhp();
    }//GEN-LAST:event_jb16ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel P1turn;
    private javax.swing.JLabel P2turn;
    private javax.swing.JButton Quit;
    private javax.swing.JButton Res;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelP1;
    private javax.swing.JLabel jLabelP2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton jb1;
    private javax.swing.JButton jb10;
    private javax.swing.JButton jb11;
    private javax.swing.JButton jb12;
    private javax.swing.JButton jb13;
    private javax.swing.JButton jb14;
    private javax.swing.JButton jb15;
    private javax.swing.JButton jb16;
    private javax.swing.JButton jb2;
    private javax.swing.JButton jb3;
    private javax.swing.JButton jb4;
    private javax.swing.JButton jb5;
    private javax.swing.JButton jb6;
    private javax.swing.JButton jb7;
    private javax.swing.JButton jb8;
    private javax.swing.JButton jb9;
    // End of variables declaration//GEN-END:variables
}
